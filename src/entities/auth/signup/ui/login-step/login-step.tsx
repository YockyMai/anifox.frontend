import { Input } from '@anifox/ui'
import { yupResolver } from '@hookform/resolvers/yup'
import { useAtom } from 'jotai'
import { useEffect } from 'react'
import { useForm } from 'react-hook-form'

import { UIVariants } from '@/common/types/ui-variants'
import { useCheckLoginExistLazyQuery } from '@/graphql/generated/output'

import { $signupAtoms } from '../../atoms'
import { useStepsActions } from '../../hooks'
import { StepContainer } from '../step-container'
import { loginSchema } from './login-step.schema'

export const LoginStep = () => {
  const [login, setLogin] = useAtom($signupAtoms.login)

  const [checkLoginExist, { loading: isLoginChecking }] =
    useCheckLoginExistLazyQuery()

  const { incrementStep, decrementStep } = useStepsActions()

  const {
    register,
    handleSubmit,
    reset,
    setError,
    formState: { errors }
  } = useForm({ resolver: yupResolver(loginSchema), defaultValues: { login } })

  useEffect(() => {
    reset({ login })
  }, [login, reset])

  const handleLoginSubmit = handleSubmit(async (fields) => {
    const { data } = await checkLoginExist({
      variables: {
        login: fields.login
      }
    })

    if (!data?.checkLoginExist) {
      setLogin(fields.login)
      incrementStep()
    } else {
      setError('login', { message: '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' })
    }
  })

  return (
    <StepContainer
      title='üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –õ–æ–≥–∏–Ω'
      prevButton={{ label: '–ù–∞–∑–∞–¥', onClick: decrementStep }}
      nextButton={{
        label: '–î–∞–ª–µ–µ',
        onClick: handleLoginSubmit,
        isLoading: isLoginChecking
      }}
    >
      <Input
        {...register('login')}
        error={errors.login?.message}
        label='–õ–æ–≥–∏–Ω'
        placeholder='kaneki_ken'
        variant={UIVariants.FILLED}
      />
      <p className='step-container__description'>
        –õ–æ–≥–∏–Ω –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Å—Å—ã–ª–∫–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è, –∞ —Ç–∞–∫–∂–µ, –µ–≥–æ –º–æ–∂–Ω–æ
        –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–æ email, –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç ANIFOX
      </p>
    </StepContainer>
  )
}
